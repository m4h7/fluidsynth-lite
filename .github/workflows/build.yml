name: build

on:
  push:
    branches: [ "master", "main" ]
  pull_request:
    branches: [ "master", "main" ]

jobs:

  windows:
    strategy:
      fail-fast: false
      matrix:
        os:
          - windows-latest
          - windows-2019
        arch:
          - Win32
          - x64
          - ARM64
          - ARM
        vc:
          - "Visual Studio 16 2019"
          - "Visual Studio 17 2022"
        shared:
          - ON
          - OFF
        build:
          - Debug
          - Release
        exclude:
          - vc: "Visual Studio 16 2019"
            os: windows-latest
          - vc: "Visual Studio 17 2022"
            os: windows-2019
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v4
        with:
          path: fluidsynth-lite
      - name: configure
        run: cmake -B build/fluidsynth-lite -DCMAKE_BUILD_TYPE=${{ matrix.build }} -G "${{ matrix.vc }}" -A ${{ matrix.arch }} -S ${{ github.workspace }}/fluidsynth-lite -DBUILD_SHARED_LIBS=${{ matrix.shared }}
      - name: build
        run: cmake --build build/fluidsynth-lite --config ${{ matrix.build }}
      - name: install
        run: cmake --install build/fluidsynth-lite --config ${{ matrix.build }}
      - name: cpack
        run: cd build/fluidsynth-lite && cpack -C ${{ matrix.build }} --config CPackConfig.cmake && cpack -C ${{ matrix.build }} --config CPackSourceConfig.cmake


  msys:
    runs-on: windows-latest
    strategy:
      matrix:
        gen:
          - Ninja
          - "MSYS Makefiles"
          - "MinGW Makefiles"
        build:
          - Debug
          - Release
        shared:
          - ON
          - OFF
        include:
          - { sys: mingw64, env: x86_64 }
          - { sys: mingw32, env: i686 }
          - { sys: ucrt64,  env: ucrt-x86_64 }
          - { sys: clang64, env: clang-x86_64 }
    steps:
      - uses: msys2/setup-msys2@v2
        with:
          update: true
          msystem: ${{matrix.sys}}
          install: mingw-w64-x86_64-ninja
      - name: Put ninja.exe on PATH
        run: Add-Content $env:GITHUB_PATH "D:\a\_temp\msys64\mingw64\bin"
      - uses: actions/checkout@v4
        with:
          path: fluidsynth-lite
      - name: configure
        run: cmake -B build/fluidsynth-lite -DCMAKE_BUILD_TYPE=${{ matrix.build }} -G "${{ matrix.gen }}" -S "${{ github.workspace }}/fluidsynth-lite" -DBUILD_SHARED_LIBS=${{ matrix.shared }}
      - name: build
        run: cmake --build build/fluidsynth-lite --config ${{ matrix.build }}
      - name: install
        run: cmake --install build/fluidsynth-lite --prefix install --config ${{ matrix.build }}
      - name: cpack
        run: cd build/fluidsynth-lite && cpack -C ${{ matrix.build }} --config CPackConfig.cmake && cpack -C ${{ matrix.build }} --config CPackSourceConfig.cmake

  unix:
    strategy:
      fail-fast: false
      matrix:
        compiler:
          - gcc
          - clang
        shared:
          - ON
          - OFF
        os:
          - macos-latest
          - macos-11
          - ubuntu-latest
          - ubuntu-20.04
        build:
          - Debug
          - Release
        gen:
          - Ninja
          - "Unix Makefiles"
          - Xcode
        exclude:
          - gen: Xcode
            os: ubuntu-latest
          - gen: Xcode
            os: ubuntu-20.04
    runs-on: ${{ matrix.os }}
    steps:
      - uses: seanmiddleditch/gha-setup-ninja@master
      - uses: actions/checkout@v4
        with:
          path: ${{ github.workspace }}/fluidsynth-lite
      - name: configure
        run: cmake -B build/fluidsynth-lite -DCMAKE_BUILD_TYPE=${{ matrix.build }} -G "${{ matrix.gen }}" -S ${{ github.workspace }}/fluidsynth-lite -DBUILD_SHARED_LIBS=${{ matrix.shared }} -DCMAKE_C_COMPILER=${{ matrix.compiler }}
      - name: build
        run: cmake --build build/fluidsynth-lite --config ${{ matrix.build }}
      - name: install
        run: cmake --install build/fluidsynth-lite --prefix install --config ${{ matrix.build }}
      - name: cpack
        run: cd build/fluidsynth-lite && cpack -C ${{ matrix.build }} --config CPackConfig.cmake && cpack -C ${{ matrix.build }} --config CPackSourceConfig.cmake

